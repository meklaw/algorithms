import unittest

from src.List.OrderedList import OrderedList, Node, OrderedStringList


class TestOrderedList(unittest.TestCase):
    def test_compare(self):
        list = OrderedList(True)
        self.assertEqual(list.compare(0, 0), 0)
        self.assertEqual(list.compare(5, 5), 0)
        self.assertEqual(list.compare(0, 5), -1)
        self.assertEqual(list.compare(-10, -5), -1)
        self.assertEqual(list.compare(10, 5), 1)
        self.assertEqual(list.compare(5, -5), 1)

    def test_add_before_node(self):
        list = OrderedList(True)
        node1 = Node(5)
        node2 = Node(15)
        node3 = Node(10)
        list.head = node1
        list.tail = node1
        list._OrderedList__size = 1
        self.assertEqual(list.head.value, 5)
        self.assertEqual(list.tail.value, 5)
        list._OrderedList__add_before_node(node1, node2)
        self.assertEqual(list.head.value, 15)
        self.assertEqual(list.head.next.value, 5)
        self.assertEqual(list.tail.prev.value, 15)
        self.assertEqual(list.tail.value, 5)
        list._OrderedList__add_before_node(node1, node3)
        self.assertEqual(list.head.value, 15)
        self.assertEqual(list.head.next.value, 10)
        self.assertEqual(list.head.next.next.value, 5)
        self.assertEqual(list.tail.prev.prev.value, 15)
        self.assertEqual(list.tail.prev.value, 10)
        self.assertEqual(list.tail.value, 5)
        list._OrderedList__add_before_node(node2, Node(20))
        self.assertEqual(list.head.value, 20)
        self.assertEqual(list.head.next.value, 15)
        self.assertEqual(list.head.next.next.value, 10)
        self.assertEqual(list.head.next.next.next.value, 5)
        self.assertEqual(list.tail.prev.prev.prev.value, 20)
        self.assertEqual(list.tail.prev.prev.value, 15)
        self.assertEqual(list.tail.prev.value, 10)
        self.assertEqual(list.tail.value, 5)

    def test_add(self):
        list = OrderedList(True)
        list.add(10)
        self.assertEqual(list.head.value, 10)
        self.assertEqual(list.tail.value, 10)
        self.assertEqual(list.len(), 1)
        list.add(10)
        self.assertEqual(list.head.value, 10)
        self.assertEqual(list.head.next.value, 10)
        self.assertEqual(list.tail.prev.value, 10)
        self.assertEqual(list.tail.value, 10)
        self.assertEqual(list.len(), 2)
        list.add(5)
        self.assertEqual(list.head.value, 5)
        self.assertEqual(list.head.next.value, 10)
        self.assertEqual(list.head.next.next.value, 10)
        self.assertEqual(list.tail.prev.prev.value, 5)
        self.assertEqual(list.tail.prev.value, 10)
        self.assertEqual(list.tail.value, 10)
        self.assertEqual(list.len(), 3)
        list.add(25)
        self.assertEqual(list.head.value, 5)
        self.assertEqual(list.head.next.value, 10)
        self.assertEqual(list.head.next.next.value, 10)
        self.assertEqual(list.head.next.next.next.value, 25)
        self.assertEqual(list.tail.prev.prev.prev.value, 5)
        self.assertEqual(list.tail.prev.prev.value, 10)
        self.assertEqual(list.tail.prev.value, 10)
        self.assertEqual(list.tail.value, 25)
        self.assertEqual(list.len(), 4)
        list.add(20)
        self.assertEqual(list.head.value, 5)
        self.assertEqual(list.head.next.value, 10)
        self.assertEqual(list.head.next.next.value, 10)
        self.assertEqual(list.head.next.next.next.value, 20)
        self.assertEqual(list.head.next.next.next.next.value, 25)
        self.assertEqual(list.tail.prev.prev.prev.prev.value, 5)
        self.assertEqual(list.tail.prev.prev.prev.value, 10)
        self.assertEqual(list.tail.prev.prev.value, 10)
        self.assertEqual(list.tail.prev.value, 20)
        self.assertEqual(list.tail.value, 25)
        self.assertEqual(list.len(), 5)

        list = OrderedList(False)
        list.add(10)
        self.assertEqual(list.head.value, 10)
        self.assertEqual(list.tail.value, 10)
        self.assertEqual(list.len(), 1)
        list.add(10)
        self.assertEqual(list.head.value, 10)
        self.assertEqual(list.head.next.value, 10)
        self.assertEqual(list.tail.prev.value, 10)
        self.assertEqual(list.tail.value, 10)
        self.assertEqual(list.len(), 2)
        list.add(5)
        self.assertEqual(list.head.value, 10)
        self.assertEqual(list.head.next.value, 10)
        self.assertEqual(list.head.next.next.value, 5)
        self.assertEqual(list.tail.prev.prev.value, 10)
        self.assertEqual(list.tail.prev.value, 10)
        self.assertEqual(list.tail.value, 5)
        self.assertEqual(list.len(), 3)
        list.add(25)
        self.assertEqual(list.head.value, 25)
        self.assertEqual(list.head.next.value, 10)
        self.assertEqual(list.head.next.next.value, 10)
        self.assertEqual(list.head.next.next.next.value, 5)
        self.assertEqual(list.tail.prev.prev.prev.value, 25)
        self.assertEqual(list.tail.prev.prev.value, 10)
        self.assertEqual(list.tail.prev.value, 10)
        self.assertEqual(list.tail.value, 5)
        self.assertEqual(list.len(), 4)
        list.add(20)
        self.assertEqual(list.head.value, 25)
        self.assertEqual(list.head.next.value, 20)
        self.assertEqual(list.head.next.next.value, 10)
        self.assertEqual(list.head.next.next.next.value, 10)
        self.assertEqual(list.head.next.next.next.next.value, 5)
        self.assertEqual(list.tail.prev.prev.prev.prev.value, 25)
        self.assertEqual(list.tail.prev.prev.prev.value, 20)
        self.assertEqual(list.tail.prev.prev.value, 10)
        self.assertEqual(list.tail.prev.value, 10)
        self.assertEqual(list.tail.value, 5)
        self.assertEqual(list.len(), 5)

    def test_find(self):
        list = OrderedList(True)
        self.assertEqual(list.find(-5), None)
        list.add(5)
        list.add(10)
        list.add(15)
        list.add(20)
        self.assertEqual(list.find(10).prev.value, 5)
        self.assertEqual(list.find(10).value, 10)
        self.assertEqual(list.find(10).next.value, 15)
        self.assertEqual(list.find(10).next.next.value, 20)
        self.assertEqual(list.find(-5), None)

    def test_delete(self):
        list = OrderedList(True)
        list.add(5)
        list.add(10)
        list.add(15)
        list.add(20)
        list.add(25)

        list.delete(5)
        self.assertEqual(list.head.prev, None)
        self.assertEqual(list.head.value, 10)
        self.assertEqual(list.head.next.value, 15)
        self.assertEqual(list.head.next.next.value, 20)
        self.assertEqual(list.head.next.next.next.value, 25)
        self.assertEqual(list.head.next.next.next.next, None)
        self.assertEqual(list.tail.prev.prev.prev.prev, None)
        self.assertEqual(list.tail.prev.prev.prev.value, 10)
        self.assertEqual(list.tail.prev.prev.value, 15)
        self.assertEqual(list.tail.prev.value, 20)
        self.assertEqual(list.tail.value, 25)
        self.assertEqual(list.tail.next, None)
        self.assertEqual(list.len(), 4)

        list.delete(25)
        self.assertEqual(list.head.prev, None)
        self.assertEqual(list.head.value, 10)
        self.assertEqual(list.head.next.value, 15)
        self.assertEqual(list.head.next.next.value, 20)
        self.assertEqual(list.head.next.next.next, None)
        self.assertEqual(list.tail.prev.prev.prev, None)
        self.assertEqual(list.tail.prev.prev.value, 10)
        self.assertEqual(list.tail.prev.value, 15)
        self.assertEqual(list.tail.value, 20)
        self.assertEqual(list.tail.next, None)
        self.assertEqual(list.len(), 3)

        list.delete(100)
        list.delete(15)
        self.assertEqual(list.head.prev, None)
        self.assertEqual(list.head.value, 10)
        self.assertEqual(list.head.next.value, 20)
        self.assertEqual(list.head.next.next, None)
        self.assertEqual(list.tail.prev.prev, None)
        self.assertEqual(list.tail.prev.value, 10)
        self.assertEqual(list.tail.value, 20)
        self.assertEqual(list.tail.next, None)
        self.assertEqual(list.len(), 2)

        list.delete(20)
        self.assertEqual(list.head.prev, None)
        self.assertEqual(list.head.value, 10)
        self.assertEqual(list.tail.value, 10)
        self.assertEqual(list.tail.next, None)
        self.assertEqual(list.len(), 1)

        list.delete(10)
        self.assertEqual(list.head, None)
        self.assertEqual(list.tail, None)
        self.assertEqual(list.len(), 0)


        list = OrderedList(False)
        list.add(25)
        list.add(20)
        list.add(15)
        list.add(10)
        list.add(5)

        list.delete(5)
        self.assertEqual(list.head.prev, None)
        self.assertEqual(list.head.value, 25)
        self.assertEqual(list.head.next.value, 20)
        self.assertEqual(list.head.next.next.value, 15)
        self.assertEqual(list.head.next.next.next.value, 10)
        self.assertEqual(list.head.next.next.next.next, None)
        self.assertEqual(list.tail.prev.prev.prev.prev, None)
        self.assertEqual(list.tail.prev.prev.prev.value, 25)
        self.assertEqual(list.tail.prev.prev.value, 20)
        self.assertEqual(list.tail.prev.value, 15)
        self.assertEqual(list.tail.value, 10)
        self.assertEqual(list.tail.next, None)
        self.assertEqual(list.len(), 4)

        list.delete(25)
        self.assertEqual(list.head.prev, None)
        self.assertEqual(list.head.value, 20)
        self.assertEqual(list.head.next.value, 15)
        self.assertEqual(list.head.next.next.value, 10)
        self.assertEqual(list.head.next.next.next, None)
        self.assertEqual(list.tail.prev.prev.prev, None)
        self.assertEqual(list.tail.prev.prev.value, 20)
        self.assertEqual(list.tail.prev.value, 15)
        self.assertEqual(list.tail.value, 10)
        self.assertEqual(list.tail.next, None)
        self.assertEqual(list.len(), 3)

        list.delete(100)
        list.delete(15)
        self.assertEqual(list.head.prev, None)
        self.assertEqual(list.head.value, 20)
        self.assertEqual(list.head.next.value, 10)
        self.assertEqual(list.head.next.next, None)
        self.assertEqual(list.tail.prev.prev, None)
        self.assertEqual(list.tail.prev.value, 20)
        self.assertEqual(list.tail.value, 10)
        self.assertEqual(list.tail.next, None)
        self.assertEqual(list.len(), 2)

        list.delete(20)
        self.assertEqual(list.head.prev, None)
        self.assertEqual(list.head.value, 10)
        self.assertEqual(list.tail.value, 10)
        self.assertEqual(list.tail.next, None)
        self.assertEqual(list.len(), 1)

        list.delete(10)
        self.assertEqual(list.head, None)
        self.assertEqual(list.tail, None)
        self.assertEqual(list.len(), 0)


        list = OrderedList(True)
        list.add(5)
        list.add(5)
        list.add(10)
        list.delete(5)
        self.assertEqual(list.head.value, 5)
        self.assertEqual(list.head.next.value, 10)
        self.assertEqual(list.tail.prev.value, 5)
        self.assertEqual(list.tail.value, 10)


    def test_clean(self):
        list = OrderedList(True)
        list.add(5)
        list.add(10)
        list.add(15)
        list.add(20)
        list.clean(True)
        self.assertEqual(list.head, list.tail)
        self.assertEqual(list.len(), 0)


class TestOrderedStringList(unittest.TestCase):
    def test_compare(self):
        list = OrderedStringList(True)
        self.assertEqual(list.compare("apple", "Apple"), 1)
        self.assertEqual(list.compare("apple", "banana"), -1)
        self.assertEqual(list.compare("      apple", "Apple"), 1)
        self.assertEqual(list.compare("apple            ", "banana"), -1)
        self.assertEqual(list.compare("apple", "apple"), 0)
        self.assertEqual(list.compare("apple    ", "apple"), 0)
